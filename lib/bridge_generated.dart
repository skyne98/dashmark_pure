// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.69.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'bridge_generated.io.dart'
    if (dart.library.html) 'bridge_generated.web.dart';

abstract class Native {
  Future<void> sayHello({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSayHelloConstMeta;

  void moveStateToUiThread({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kMoveStateToUiThreadConstMeta;

  void requestDraw({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kRequestDrawConstMeta;

  void requestResize({required int width, required int height, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kRequestResizeConstMeta;

  void setCurrentTime({required double time, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSetCurrentTimeConstMeta;
}

class NativeImpl implements Native {
  final NativePlatform _platform;
  factory NativeImpl(ExternalLibrary dylib) =>
      NativeImpl.raw(NativePlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory NativeImpl.wasm(FutureOr<WasmModule> module) =>
      NativeImpl(module as ExternalLibrary);
  NativeImpl.raw(this._platform);
  Future<void> sayHello({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_say_hello(port_),
      parseSuccessData: _wire2api_unit,
      constMeta: kSayHelloConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSayHelloConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "say_hello",
        argNames: [],
      );

  void moveStateToUiThread({dynamic hint}) {
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner.wire_move_state_to_ui_thread(),
      parseSuccessData: _wire2api_unit,
      constMeta: kMoveStateToUiThreadConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kMoveStateToUiThreadConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "move_state_to_ui_thread",
        argNames: [],
      );

  void requestDraw({dynamic hint}) {
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner.wire_request_draw(),
      parseSuccessData: _wire2api_unit,
      constMeta: kRequestDrawConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kRequestDrawConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "request_draw",
        argNames: [],
      );

  void requestResize({required int width, required int height, dynamic hint}) {
    var arg0 = api2wire_u32(width);
    var arg1 = api2wire_u32(height);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner.wire_request_resize(arg0, arg1),
      parseSuccessData: _wire2api_unit,
      constMeta: kRequestResizeConstMeta,
      argValues: [width, height],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kRequestResizeConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "request_resize",
        argNames: ["width", "height"],
      );

  void setCurrentTime({required double time, dynamic hint}) {
    var arg0 = api2wire_f64(time);
    return _platform.executeSync(FlutterRustBridgeSyncTask(
      callFfi: () => _platform.inner.wire_set_current_time(arg0),
      parseSuccessData: _wire2api_unit,
      constMeta: kSetCurrentTimeConstMeta,
      argValues: [time],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSetCurrentTimeConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "set_current_time",
        argNames: ["time"],
      );

  void dispose() {
    _platform.dispose();
  }
// Section: wire2api

  void _wire2api_unit(dynamic raw) {
    return;
  }
}

// Section: api2wire

@protected
double api2wire_f64(double raw) {
  return raw;
}

@protected
int api2wire_u32(int raw) {
  return raw;
}
// Section: finalizer
