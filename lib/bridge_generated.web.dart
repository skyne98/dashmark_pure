// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.69.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'bridge_generated.dart';
export 'bridge_generated.dart';

class NativePlatform extends FlutterRustBridgeBase<NativeWire>
    with FlutterRustBridgeSetupMixin {
  NativePlatform(FutureOr<WasmModule> dylib) : super(NativeWire(dylib)) {
    setupMixinConstructor();
  }
  Future<void> setup() => inner.init;

// Section: api2wire

  @protected
  Float64List api2wire_float_64_list(Float64List raw) {
    return raw;
  }

  @protected
  Object api2wire_u64(int raw) {
    return castNativeBigInt(raw);
  }

  @protected
  Object /* BigInt64Array */ api2wire_uint_64_list(Uint64List raw) {
    return raw.inner;
  }
// Section: finalizer
}

// Section: WASM wire module

@JS('wasm_bindgen')
external NativeWasmModule get wasmModule;

@JS()
@anonymous
class NativeWasmModule implements WasmModule {
  external Object /* Promise */ call([String? moduleName]);
  external NativeWasmModule bind(dynamic thisArg, String moduleName);
  external dynamic /* void */ wire_say_hello_async(NativePortType port_);

  external dynamic /* void */ wire_morton_codes_async(
      NativePortType port_, Float64List xs, Float64List ys);

  external dynamic /* Object /* BigInt64Array */ */ wire_morton_codes(
      Float64List xs, Float64List ys);

  external dynamic /* Object */ wire_aabb_new(
      double min_x, double min_y, double max_x, double max_y);

  external dynamic /* Object /* BigInt64Array */ */ wire_aabb_new_bulk(
      Float64List min_xs,
      Float64List min_ys,
      Float64List max_xs,
      Float64List max_ys);

  external dynamic /* void */ wire_aabb_drop(Object aabb_id);

  external dynamic /* Float64List */ wire_aabb_min(Object aabb_id);

  external dynamic /* Float64List */ wire_aabb_max(Object aabb_id);

  external dynamic /* Float64List */ wire_aabb_size(Object aabb_id);

  external dynamic /* Float64List */ wire_aabb_center(Object aabb_id);

  external dynamic /* bool */ wire_aabb_intersects_aabb(
      Object aabb_left_id, Object aabb_right_id);

  external dynamic /* bool */ wire_aabb_contains_point(
      Object aabb_id, Float64List point);

  external dynamic /* bool */ wire_aabb_contains_aabb(
      Object aabb_left_id, Object aabb_right_id);

  external dynamic /* Object */ wire_aabb_merge(
      Object aabb_left_id, Object aabb_right_id);

  external dynamic /* void */ wire_aabb_merge_with(
      NativePortType port_, Object aabb_id, Object other_id);

  external dynamic /* Object */ wire_bvh_new(Object /* BigInt64Array */ aabbs);

  external dynamic /* void */ wire_bvh_new_async(
      NativePortType port_, Object /* BigInt64Array */ aabbs);

  external dynamic /* void */ wire_bvh_drop(Object bvh_id);

  external dynamic /* List<dynamic> */ wire_bvh_flatten(Object bvh_id);

  external dynamic /* void */ wire_bvh_flatten_async(
      NativePortType port_, Object bvh_id);

  external dynamic /* Object */ wire_bvh_depth(Object bvh_id);

  external dynamic /* void */ wire_bvh_depth_async(
      NativePortType port_, Object bvh_id);

  external dynamic /* Object /* BigInt64Array */ */
      wire_bvh_query_aabb_collisions(Object bvh_id, Object aabb_id);

  external dynamic /* Object /* BigInt64Array */ */
      wire_bvh_query_point_collisions(Object bvh_id, double x, double y);

  external dynamic /* String */ wire_bvh_print(Object bvh_id);

  external dynamic /* void */ wire_bvh_print_async(
      NativePortType port_, Object bvh_id);
}

// Section: WASM wire connector

class NativeWire extends FlutterRustBridgeWasmWireBase<NativeWasmModule> {
  NativeWire(FutureOr<WasmModule> module)
      : super(WasmModule.cast<NativeWasmModule>(module));

  void wire_say_hello_async(NativePortType port_) =>
      wasmModule.wire_say_hello_async(port_);

  void wire_morton_codes_async(
          NativePortType port_, Float64List xs, Float64List ys) =>
      wasmModule.wire_morton_codes_async(port_, xs, ys);

  dynamic /* Object /* BigInt64Array */ */ wire_morton_codes(
          Float64List xs, Float64List ys) =>
      wasmModule.wire_morton_codes(xs, ys);

  dynamic /* Object */ wire_aabb_new(
          double min_x, double min_y, double max_x, double max_y) =>
      wasmModule.wire_aabb_new(min_x, min_y, max_x, max_y);

  dynamic /* Object /* BigInt64Array */ */ wire_aabb_new_bulk(
          Float64List min_xs,
          Float64List min_ys,
          Float64List max_xs,
          Float64List max_ys) =>
      wasmModule.wire_aabb_new_bulk(min_xs, min_ys, max_xs, max_ys);

  dynamic /* void */ wire_aabb_drop(Object aabb_id) =>
      wasmModule.wire_aabb_drop(aabb_id);

  dynamic /* Float64List */ wire_aabb_min(Object aabb_id) =>
      wasmModule.wire_aabb_min(aabb_id);

  dynamic /* Float64List */ wire_aabb_max(Object aabb_id) =>
      wasmModule.wire_aabb_max(aabb_id);

  dynamic /* Float64List */ wire_aabb_size(Object aabb_id) =>
      wasmModule.wire_aabb_size(aabb_id);

  dynamic /* Float64List */ wire_aabb_center(Object aabb_id) =>
      wasmModule.wire_aabb_center(aabb_id);

  dynamic /* bool */ wire_aabb_intersects_aabb(
          Object aabb_left_id, Object aabb_right_id) =>
      wasmModule.wire_aabb_intersects_aabb(aabb_left_id, aabb_right_id);

  dynamic /* bool */ wire_aabb_contains_point(
          Object aabb_id, Float64List point) =>
      wasmModule.wire_aabb_contains_point(aabb_id, point);

  dynamic /* bool */ wire_aabb_contains_aabb(
          Object aabb_left_id, Object aabb_right_id) =>
      wasmModule.wire_aabb_contains_aabb(aabb_left_id, aabb_right_id);

  dynamic /* Object */ wire_aabb_merge(
          Object aabb_left_id, Object aabb_right_id) =>
      wasmModule.wire_aabb_merge(aabb_left_id, aabb_right_id);

  void wire_aabb_merge_with(
          NativePortType port_, Object aabb_id, Object other_id) =>
      wasmModule.wire_aabb_merge_with(port_, aabb_id, other_id);

  dynamic /* Object */ wire_bvh_new(Object /* BigInt64Array */ aabbs) =>
      wasmModule.wire_bvh_new(aabbs);

  void wire_bvh_new_async(
          NativePortType port_, Object /* BigInt64Array */ aabbs) =>
      wasmModule.wire_bvh_new_async(port_, aabbs);

  dynamic /* void */ wire_bvh_drop(Object bvh_id) =>
      wasmModule.wire_bvh_drop(bvh_id);

  dynamic /* List<dynamic> */ wire_bvh_flatten(Object bvh_id) =>
      wasmModule.wire_bvh_flatten(bvh_id);

  void wire_bvh_flatten_async(NativePortType port_, Object bvh_id) =>
      wasmModule.wire_bvh_flatten_async(port_, bvh_id);

  dynamic /* Object */ wire_bvh_depth(Object bvh_id) =>
      wasmModule.wire_bvh_depth(bvh_id);

  void wire_bvh_depth_async(NativePortType port_, Object bvh_id) =>
      wasmModule.wire_bvh_depth_async(port_, bvh_id);

  dynamic /* Object /* BigInt64Array */ */ wire_bvh_query_aabb_collisions(
          Object bvh_id, Object aabb_id) =>
      wasmModule.wire_bvh_query_aabb_collisions(bvh_id, aabb_id);

  dynamic /* Object /* BigInt64Array */ */ wire_bvh_query_point_collisions(
          Object bvh_id, double x, double y) =>
      wasmModule.wire_bvh_query_point_collisions(bvh_id, x, y);

  dynamic /* String */ wire_bvh_print(Object bvh_id) =>
      wasmModule.wire_bvh_print(bvh_id);

  void wire_bvh_print_async(NativePortType port_, Object bvh_id) =>
      wasmModule.wire_bvh_print_async(port_, bvh_id);
}
