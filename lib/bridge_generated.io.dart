// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.69.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'bridge_generated.dart';
export 'bridge_generated.dart';
import 'dart:ffi' as ffi;

class NativePlatform extends FlutterRustBridgeBase<NativeWire> {
  NativePlatform(ffi.DynamicLibrary dylib) : super(NativeWire(dylib));

// Section: api2wire

  @protected
  ffi.Pointer<wire_RawIndex> api2wire_box_autoadd_raw_index(RawIndex raw) {
    final ptr = inner.new_box_autoadd_raw_index_0();
    _api_fill_to_wire_raw_index(raw, ptr.ref);
    return ptr;
  }

  @protected
  int api2wire_u64(int raw) {
    return raw;
  }

// Section: finalizer

// Section: api_fill_to_wire

  void _api_fill_to_wire_box_autoadd_raw_index(
      RawIndex apiObj, ffi.Pointer<wire_RawIndex> wireObj) {
    _api_fill_to_wire_raw_index(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_raw_index(RawIndex apiObj, wire_RawIndex wireObj) {
    wireObj.field0 = api2wire_usize(apiObj.field0);
    wireObj.field1 = api2wire_u64(apiObj.field1);
  }
}

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.

/// generated by flutter_rust_bridge
class NativeWire implements FlutterRustBridgeWireBase {
  @internal
  late final dartApi = DartApiDl(init_frb_dart_api_dl);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  NativeWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  NativeWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>(
          'store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr
      .asFunction<void Function(DartPostCObjectFnType)>();

  Object get_dart_object(
    int ptr,
  ) {
    return _get_dart_object(
      ptr,
    );
  }

  late final _get_dart_objectPtr =
      _lookup<ffi.NativeFunction<ffi.Handle Function(ffi.UintPtr)>>(
          'get_dart_object');
  late final _get_dart_object =
      _get_dart_objectPtr.asFunction<Object Function(int)>();

  void drop_dart_object(
    int ptr,
  ) {
    return _drop_dart_object(
      ptr,
    );
  }

  late final _drop_dart_objectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.UintPtr)>>(
          'drop_dart_object');
  late final _drop_dart_object =
      _drop_dart_objectPtr.asFunction<void Function(int)>();

  int new_dart_opaque(
    Object handle,
  ) {
    return _new_dart_opaque(
      handle,
    );
  }

  late final _new_dart_opaquePtr =
      _lookup<ffi.NativeFunction<ffi.UintPtr Function(ffi.Handle)>>(
          'new_dart_opaque');
  late final _new_dart_opaque =
      _new_dart_opaquePtr.asFunction<int Function(Object)>();

  int init_frb_dart_api_dl(
    ffi.Pointer<ffi.Void> obj,
  ) {
    return _init_frb_dart_api_dl(
      obj,
    );
  }

  late final _init_frb_dart_api_dlPtr =
      _lookup<ffi.NativeFunction<ffi.IntPtr Function(ffi.Pointer<ffi.Void>)>>(
          'init_frb_dart_api_dl');
  late final _init_frb_dart_api_dl = _init_frb_dart_api_dlPtr
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  void wire_say_hello(
    int port_,
  ) {
    return _wire_say_hello(
      port_,
    );
  }

  late final _wire_say_helloPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_say_hello');
  late final _wire_say_hello =
      _wire_say_helloPtr.asFunction<void Function(int)>();

  WireSyncReturn wire_create_entity() {
    return _wire_create_entity();
  }

  late final _wire_create_entityPtr =
      _lookup<ffi.NativeFunction<WireSyncReturn Function()>>(
          'wire_create_entity');
  late final _wire_create_entity =
      _wire_create_entityPtr.asFunction<WireSyncReturn Function()>();

  WireSyncReturn wire_drop_entity(
    ffi.Pointer<wire_RawIndex> index,
  ) {
    return _wire_drop_entity(
      index,
    );
  }

  late final _wire_drop_entityPtr = _lookup<
      ffi.NativeFunction<
          WireSyncReturn Function(
              ffi.Pointer<wire_RawIndex>)>>('wire_drop_entity');
  late final _wire_drop_entity = _wire_drop_entityPtr
      .asFunction<WireSyncReturn Function(ffi.Pointer<wire_RawIndex>)>();

  WireSyncReturn wire_entity_set_position(
    ffi.Pointer<wire_RawIndex> index,
    double x,
    double y,
  ) {
    return _wire_entity_set_position(
      index,
      x,
      y,
    );
  }

  late final _wire_entity_set_positionPtr = _lookup<
      ffi.NativeFunction<
          WireSyncReturn Function(ffi.Pointer<wire_RawIndex>, ffi.Double,
              ffi.Double)>>('wire_entity_set_position');
  late final _wire_entity_set_position =
      _wire_entity_set_positionPtr.asFunction<
          WireSyncReturn Function(
              ffi.Pointer<wire_RawIndex>, double, double)>();

  ffi.Pointer<wire_RawIndex> new_box_autoadd_raw_index_0() {
    return _new_box_autoadd_raw_index_0();
  }

  late final _new_box_autoadd_raw_index_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_RawIndex> Function()>>(
          'new_box_autoadd_raw_index_0');
  late final _new_box_autoadd_raw_index_0 = _new_box_autoadd_raw_index_0Ptr
      .asFunction<ffi.Pointer<wire_RawIndex> Function()>();

  void free_WireSyncReturn(
    WireSyncReturn ptr,
  ) {
    return _free_WireSyncReturn(
      ptr,
    );
  }

  late final _free_WireSyncReturnPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(WireSyncReturn)>>(
          'free_WireSyncReturn');
  late final _free_WireSyncReturn =
      _free_WireSyncReturnPtr.asFunction<void Function(WireSyncReturn)>();
}

class _Dart_Handle extends ffi.Opaque {}

class wire_RawIndex extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;

  @ffi.Uint64()
  external int field1;
}

typedef DartPostCObjectFnType = ffi.Pointer<
    ffi.NativeFunction<ffi.Bool Function(DartPort, ffi.Pointer<ffi.Void>)>>;
typedef DartPort = ffi.Int64;
