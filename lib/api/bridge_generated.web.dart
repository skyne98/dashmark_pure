// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.72.2.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated.dart';
export 'bridge_generated.dart';

class NativePlatform extends FlutterRustBridgeBase<NativeWire>
    with FlutterRustBridgeSetupMixin {
  NativePlatform(FutureOr<WasmModule> dylib) : super(NativeWire(dylib)) {
    setupMixinConstructor();
  }
  Future<void> setup() => inner.init;

// Section: api2wire

  @protected
  Uint8List api2wire_ZeroCopyBuffer_Uint8List(Uint8List raw) {
    return api2wire_uint_8_list(raw);
  }

  @protected
  List<dynamic> api2wire_box_autoadd_raw_index(GenerationalIndex raw) {
    return api2wire_raw_index(raw);
  }

  @protected
  List<dynamic> api2wire_box_autoadd_shape(Shape raw) {
    return api2wire_shape(raw);
  }

  @protected
  List<dynamic> api2wire_list_shape(List<Shape> raw) {
    return raw.map(api2wire_shape).toList();
  }

  @protected
  List<dynamic> api2wire_list_shape_transform(List<ShapeTransform> raw) {
    return raw.map(api2wire_shape_transform).toList();
  }

  @protected
  List<dynamic> api2wire_raw_index(GenerationalIndex raw) {
    return [api2wire_usize(raw.field0), api2wire_u64(raw.field1)];
  }

  @protected
  List<dynamic> api2wire_shape(Shape raw) {
    if (raw is Shape_Ball) {
      return [0, api2wire_f64(raw.radius)];
    }
    if (raw is Shape_Compound) {
      return [
        1,
        api2wire_list_shape(raw.children),
        api2wire_list_shape_transform(raw.transforms)
      ];
    }

    throw Exception('unreachable');
  }

  @protected
  List<dynamic> api2wire_shape_transform(ShapeTransform raw) {
    return [
      api2wire_f64(raw.positionX),
      api2wire_f64(raw.positionY),
      api2wire_f64(raw.rotation),
      api2wire_f64(raw.absoluteOriginX),
      api2wire_f64(raw.absoluteOriginY)
    ];
  }

  @protected
  Object api2wire_u64(int raw) {
    return castNativeBigInt(raw);
  }

  @protected
  Uint8List api2wire_uint_8_list(Uint8List raw) {
    return raw;
  }

// Section: finalizer
}

// Section: WASM wire module

@JS('wasm_bindgen')
external NativeWasmModule get wasmModule;

@JS()
@anonymous
class NativeWasmModule implements WasmModule {
  external Object /* Promise */ call([String? moduleName]);
  external NativeWasmModule bind(dynamic thisArg, String moduleName);
  external dynamic /* void */ wire_say_hello(NativePortType port_);

  external dynamic /* void */ wire_update(double dt);

  external dynamic /* List<dynamic> */ wire_create_entity();

  external dynamic /* void */ wire_drop_entity(List<dynamic> index);

  external dynamic /* void */ wire_entities_set_position_raw(
      Uint8List indices, Uint8List positions);

  external dynamic /* void */ wire_entity_set_origin(
      List<dynamic> index, bool relative, double x, double y);

  external dynamic /* void */ wire_entities_set_rotation_raw(
      Uint8List indices, Uint8List rotations);

  external dynamic /* void */ wire_entity_set_shape(
      List<dynamic> index, List<dynamic> shape);

  external dynamic /* void */ wire_entity_set_vertices_raw(
      List<dynamic> index, Uint8List vertices);

  external dynamic /* List<dynamic> */ wire_query_aabb(
      double x, double y, double width, double height);

  external dynamic /* Uint8List */ wire_query_aabb_raw(
      double x, double y, double width, double height);

  external dynamic /* Uint8List */ wire_transformed_vertices();
}

// Section: WASM wire connector

class NativeWire extends FlutterRustBridgeWasmWireBase<NativeWasmModule> {
  NativeWire(FutureOr<WasmModule> module)
      : super(WasmModule.cast<NativeWasmModule>(module));

  void wire_say_hello(NativePortType port_) => wasmModule.wire_say_hello(port_);

  dynamic /* void */ wire_update(double dt) => wasmModule.wire_update(dt);

  dynamic /* List<dynamic> */ wire_create_entity() =>
      wasmModule.wire_create_entity();

  dynamic /* void */ wire_drop_entity(List<dynamic> index) =>
      wasmModule.wire_drop_entity(index);

  dynamic /* void */ wire_entities_set_position_raw(
          Uint8List indices, Uint8List positions) =>
      wasmModule.wire_entities_set_position_raw(indices, positions);

  dynamic /* void */ wire_entity_set_origin(
          List<dynamic> index, bool relative, double x, double y) =>
      wasmModule.wire_entity_set_origin(index, relative, x, y);

  dynamic /* void */ wire_entities_set_rotation_raw(
          Uint8List indices, Uint8List rotations) =>
      wasmModule.wire_entities_set_rotation_raw(indices, rotations);

  dynamic /* void */ wire_entity_set_shape(
          List<dynamic> index, List<dynamic> shape) =>
      wasmModule.wire_entity_set_shape(index, shape);

  dynamic /* void */ wire_entity_set_vertices_raw(
          List<dynamic> index, Uint8List vertices) =>
      wasmModule.wire_entity_set_vertices_raw(index, vertices);

  dynamic /* List<dynamic> */ wire_query_aabb(
          double x, double y, double width, double height) =>
      wasmModule.wire_query_aabb(x, y, width, height);

  dynamic /* Uint8List */ wire_query_aabb_raw(
          double x, double y, double width, double height) =>
      wasmModule.wire_query_aabb_raw(x, y, width, height);

  dynamic /* Uint8List */ wire_transformed_vertices() =>
      wasmModule.wire_transformed_vertices();
}
